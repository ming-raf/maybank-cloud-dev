replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
service:
  type: ClusterIP
  port: 80
  annotations: {}
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
nodeSelector: {}
tolerations: []
affinity: {}

# Inject Kubernetes Secret as environment variables
envSecret:
  enabled: false
  data: {}
  # EXAMPLE:
  #   DB_USER: admin
  #   DB_PASS: changeme

# Mount a ConfigMap with files into the pod
config:
  enabled: false
  mountPath: /config
  files: {}
  # EXAMPLE:
  #   app.yaml: |
  #     key: value

# Persistence via PVC (e.g., EFS through a StorageClass)
persistence:
  enabled: false
  existingClaim: ""
  accessMode: ReadWriteMany
  size: 5Gi
  storageClassName: ""  # set to your EFS storage class, e.g., efs-sc
  mountPath: /data

  # EXAMPLE annotations when service.type=LoadBalancer (AWS NLB):
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-type: external
  #   service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance

# Distribute pods across AZs for HA
topologySpreadConstraints:
  enabled: false
  maxSkew: 1
  whenUnsatisfiable: ScheduleAnyway
